package  jdk11;

/**
 * A class with all the JDK11 specific instructions. A corresponding class file can be generated
 * with the OpenJDK asmtools (https://wiki.openjdk.java.net/display/CodeTools/asmtools), 
 * version 7 or more. Usage:
 *  
 *  java -jar asmtools.jar jasm AllInstructions.jasm
 *
 * @author Eric Bruneton
 */
super public class AllInstructions
  version 55:65535
{


public Method "<init>":"()V"
  stack 1 locals 1
{
    aload_0;
    invokespecial  Method java/lang/Object."<init>":"()V";
    return;
}

public Method m:"()Ljava/lang/Object;"
  stack 1 locals 1
{
    ldc  Dynamic REF_invokeStatic
        :HandleOwner.handleField
        :"(Ljava/lang/Object;)Ljava/lang/Object;"
        :name
        :"Ljava/lang/Object;" {
      Dynamic REF_getStatic
          :ArgumentHandleOwner.argumentHandleName
          :"Ljava/lang/Object;"
          :argumentName
          :"Ljava/lang/Object;"
    };
    areturn;
}

public static Method main:"([Ljava/lang/String;)V"
  stack 1 locals 2
{
    ldc  Dynamic REF_invokeStatic
        :java/lang/invoke/LambdaMetafactory.metafactory
        :"(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/Object;"
        :run
        :"Ljava/lang/Runnable;" {
      MethodType "()V",
      MethodHandle REF_invokeStatic:AllInstructions.lambda$main$0:"()V",
      MethodType "()V"
    };
    astore_1;
    aload_1;
    invokeinterface  InterfaceMethod java/lang/Runnable.run:"()V",  1;
    return;
}

private static synthetic Method lambda$main$0:"()V"
  stack 2 locals 0
{
    getstatic  Field java/lang/System.out:"Ljava/io/PrintStream;";
    ldc  String "hello condy";
    invokevirtual  Method java/io/PrintStream.println:"(Ljava/lang/String;)V";
    return;
}

public static final InnerClass Lookup=
    class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles;

} // end Class AllInstructions

